{"ast":null,"code":"var _jsxFileName = \"/home/emanuelle/Trybe/frontend/sd-07-project-starwars-datatable-hooks/src/components/Context/Provider/index.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport getPlanets from '../../../service/contextAPI';\nimport StarWarsContext from '../StarWarsContext';\n\nfunction Provider({\n  children\n}) {\n  const [data, setData] = useState([]);\n  const [filters, setFilters] = useState({\n    filterByName: {\n      name: ''\n    }\n  });\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    const dataAPI = async () => {\n      const {\n        results\n      } = await getPlanets();\n      setData(results);\n    };\n\n    dataAPI();\n  }, []);\n\n  const handleFilterPlanets = ({\n    target: {\n      value\n    }\n  }) => {\n    setFilters({ ...filters,\n      filterByName: {\n        name: value\n      }\n    });\n  };\n\n  const context = {\n    data,\n    filters,\n    handleFilterPlanets,\n    search,\n    setSearch\n  };\n  return /*#__PURE__*/React.createElement(StarWarsContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nexport default Provider;\nProvider.propTypes = {\n  children: PropTypes.element.isRequired\n};","map":{"version":3,"sources":["/home/emanuelle/Trybe/frontend/sd-07-project-starwars-datatable-hooks/src/components/Context/Provider/index.jsx"],"names":["React","useEffect","useState","PropTypes","getPlanets","StarWarsContext","Provider","children","data","setData","filters","setFilters","filterByName","name","search","setSearch","dataAPI","results","handleFilterPlanets","target","value","context","propTypes","element","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC;AACrCU,IAAAA,YAAY,EAAE;AACZC,MAAAA,IAAI,EAAE;AADM;AADuB,GAAD,CAAtC;AAKA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,OAAO,GAAG,YAAY;AAC1B,YAAM;AAAEC,QAAAA;AAAF,UAAc,MAAMb,UAAU,EAApC;AACAK,MAAAA,OAAO,CAACQ,OAAD,CAAP;AACD,KAHD;;AAIAD,IAAAA,OAAO;AACR,GANQ,EAMN,EANM,CAAT;;AAQA,QAAME,mBAAmB,GAAG,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAAV,GAAD,KAA2B;AACrDT,IAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETE,MAAAA,YAAY,EAAE;AACZC,QAAAA,IAAI,EAAEO;AADM;AAFL,KAAD,CAAV;AAMD,GAPD;;AASA,QAAMC,OAAO,GAAG;AACdb,IAAAA,IADc;AAEdE,IAAAA,OAFc;AAGdQ,IAAAA,mBAHc;AAIdJ,IAAAA,MAJc;AAKdC,IAAAA;AALc,GAAhB;AAQA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAGM,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,QADH,CADF;AAKD;;AAED,eAAeD,QAAf;AAEAA,QAAQ,CAACgB,SAAT,GAAqB;AACnBf,EAAAA,QAAQ,EAAEJ,SAAS,CAACoB,OAAV,CAAkBC;AADT,CAArB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport getPlanets from '../../../service/contextAPI';\nimport StarWarsContext from '../StarWarsContext';\n\nfunction Provider({ children }) {\n  const [data, setData] = useState([]);\n  const [filters, setFilters] = useState({\n    filterByName: {\n      name: '',\n    },\n  });\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    const dataAPI = async () => {\n      const { results } = await getPlanets();\n      setData(results);\n    };\n    dataAPI();\n  }, []);\n\n  const handleFilterPlanets = ({ target: { value } }) => {\n    setFilters({\n      ...filters,\n      filterByName: {\n        name: value,\n      },\n    });\n  };\n\n  const context = {\n    data,\n    filters,\n    handleFilterPlanets,\n    search,\n    setSearch,\n  };\n\n  return (\n    <StarWarsContext.Provider value={ context }>\n      {children}\n    </StarWarsContext.Provider>\n  );\n}\n\nexport default Provider;\n\nProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}