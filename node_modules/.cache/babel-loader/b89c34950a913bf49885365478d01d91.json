{"ast":null,"code":"var _jsxFileName = \"/home/emanuelle/Trybe/frontend/sd-07-project-starwars-datatable-hooks/src/context/StarWarsProvider.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport StarWarsContext from './StarWarsContext';\nimport { getPlanets } from '../services/starwarsAPI';\n\nconst StarWarsProvider = ({\n  children\n}) => {\n  const [data, setDataPlanets] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  useEffect(() => {\n    async function fetchPlanets() {\n      const {\n        results\n      } = await getPlanets();\n      const dataPlanets = results;\n      setDataPlanets(dataPlanets);\n      console.log(dataPlanets);\n    }\n\n    fetchPlanets();\n  });\n\n  const handleFilterByName = input => {\n    const {\n      value\n    } = input.target;\n    setFilterName(value);\n  };\n\n  const context = {\n    data,\n    // resultado da api\n    filters: {\n      filterByName: {\n        name: filterName\n      }\n    },\n    handleFilterByName\n  };\n  return /*#__PURE__*/React.createElement(StarWarsContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default StarWarsProvider;\nStarWarsProvider.propTypes = {\n  children: PropTypes.element.isRequired\n};","map":{"version":3,"sources":["/home/emanuelle/Trybe/frontend/sd-07-project-starwars-datatable-hooks/src/context/StarWarsProvider.js"],"names":["React","useEffect","useState","PropTypes","StarWarsContext","getPlanets","StarWarsProvider","children","data","setDataPlanets","filterName","setFilterName","fetchPlanets","results","dataPlanets","console","log","handleFilterByName","input","value","target","context","filters","filterByName","name","propTypes","element","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,UAAT,QAA2B,yBAA3B;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzC,QAAM,CAACC,IAAD,EAAOC,cAAP,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeW,YAAf,GAA8B;AAC5B,YAAM;AAAEC,QAAAA;AAAF,UAAc,MAAMR,UAAU,EAApC;AACA,YAAMS,WAAW,GAAGD,OAApB;AACAJ,MAAAA,cAAc,CAACK,WAAD,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACD;;AACDF,IAAAA,YAAY;AACb,GARQ,CAAT;;AAUA,QAAMK,kBAAkB,GAAIC,KAAD,IAAW;AACpC,UAAM;AAAEC,MAAAA;AAAF,QAAYD,KAAK,CAACE,MAAxB;AACAT,IAAAA,aAAa,CAACQ,KAAD,CAAb;AACD,GAHD;;AAKA,QAAME,OAAO,GAAG;AACdb,IAAAA,IADc;AACR;AACNc,IAAAA,OAAO,EAAE;AACPC,MAAAA,YAAY,EAAE;AACZC,QAAAA,IAAI,EAAEd;AADM;AADP,KAFK;AAOdO,IAAAA;AAPc,GAAhB;AAUA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAGI,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,QADH,CADF;AAKD,CAlCD;;AAoCA,eAAeD,gBAAf;AAEAA,gBAAgB,CAACmB,SAAjB,GAA6B;AAC3BlB,EAAAA,QAAQ,EAAEJ,SAAS,CAACuB,OAAV,CAAkBC;AADD,CAA7B","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport StarWarsContext from './StarWarsContext';\nimport { getPlanets } from '../services/starwarsAPI';\n\nconst StarWarsProvider = ({ children }) => {\n  const [data, setDataPlanets] = useState([]);\n  const [filterName, setFilterName] = useState('');\n\n  useEffect(() => {\n    async function fetchPlanets() {\n      const { results } = await getPlanets();\n      const dataPlanets = results;\n      setDataPlanets(dataPlanets);\n      console.log(dataPlanets);\n    }\n    fetchPlanets();\n  });\n\n  const handleFilterByName = (input) => {\n    const { value } = input.target;\n    setFilterName(value);\n  };\n\n  const context = {\n    data, // resultado da api\n    filters: {\n      filterByName: {\n        name: filterName,\n      },\n    },\n    handleFilterByName,\n  };\n\n  return (\n    <StarWarsContext.Provider value={ context }>\n      {children}\n    </StarWarsContext.Provider>\n  );\n};\n\nexport default StarWarsProvider;\n\nStarWarsProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}