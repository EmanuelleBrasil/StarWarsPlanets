{"ast":null,"code":"var _jsxFileName = \"/home/emanuelle/Trybe/frontend/projects/sd-07-project-starwars-datatable-hooks/src/components/PlanetsFilters.js\";\nimport React, { useContext } from 'react';\nimport StarWarsContext from '../context/StarWarsContext';\n\nfunction PlanetsFilters() {\n  const {\n    handleFilterByName,\n    handleInputColumn,\n    handleInputComparison,\n    handleInputValue,\n    filterDataButton,\n    deleteFilter,\n    filters: {\n      filterByNumericValues\n    }\n  } = useContext(StarWarsContext);\n  const optionsColumn = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n  const ONE = 1;\n  const optionsDropdownToSort = ['name', 'rotation_period', 'orbital_period', 'diameter', 'climate', 'gravity', 'terrain', 'surface_water', 'population', 'created', 'edited', 'films', 'url'];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    \"data-testid\": \"name-filter\",\n    onChange: handleFilterByName,\n    placeholder: \"Filter by Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"column-filter\",\n    onChange: handleInputColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, filterByNumericValues.length >= ONE ? optionsColumn.filter(option => option !== filterByNumericValues[0].column).map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, option)) : optionsColumn.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, option))), /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"comparison-filter\",\n    onChange: handleInputComparison,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"maior que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"maior que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"menor que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"menor que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"igual a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"igual a\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"value\",\n    \"data-testid\": \"value-filter\",\n    onChange: handleInputValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"button-filter\",\n    onClick: filterDataButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Filter\"), /*#__PURE__*/React.createElement(\"select\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, optionsDropdownToSort.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, option))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ASC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"ASC\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    \"data-testid\": \"column-sort-input-asc\",\n    id: \"ASC\",\n    value: \"ASC\" // onClick={ () => sortBy('ASC') }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"DESC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"DESC\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    \"data-testid\": \"column-sort-input-desc\",\n    id: \"DESC\",\n    value: \"DESC\" // onClick={ () => sortBy('DESC') }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"column-sort-button\",\n    type: \"button\" // onClick={ () => sortPlanets() }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Order\"), filterByNumericValues.length >= ONE ? filterByNumericValues.map((filter, index) => /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"filter\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, `Filter ${index + 1}:\n              ${filter.column} ${filter.comparison} ${filter.value}`), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    value: filter.column,\n    onClick: deleteFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"X\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 14\n    }\n  }, \"Sem filtros\"));\n}\n\nexport default PlanetsFilters;","map":{"version":3,"sources":["/home/emanuelle/Trybe/frontend/projects/sd-07-project-starwars-datatable-hooks/src/components/PlanetsFilters.js"],"names":["React","useContext","StarWarsContext","PlanetsFilters","handleFilterByName","handleInputColumn","handleInputComparison","handleInputValue","filterDataButton","deleteFilter","filters","filterByNumericValues","optionsColumn","ONE","optionsDropdownToSort","length","filter","option","column","map","index","comparison","value"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport StarWarsContext from '../context/StarWarsContext';\n\nfunction PlanetsFilters() {\n  const {\n    handleFilterByName,\n    handleInputColumn,\n    handleInputComparison,\n    handleInputValue,\n    filterDataButton,\n    deleteFilter,\n    filters: { filterByNumericValues },\n  } = useContext(StarWarsContext);\n\n  const optionsColumn = [\n    'population',\n    'orbital_period',\n    'diameter',\n    'rotation_period',\n    'surface_water',\n  ];\n  const ONE = 1;\n  const optionsDropdownToSort = [\n    'name', 'rotation_period', 'orbital_period', 'diameter', 'climate', 'gravity',\n    'terrain', 'surface_water', 'population', 'created', 'edited', 'films', 'url'];\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        data-testid=\"name-filter\"\n        onChange={ handleFilterByName }\n        placeholder=\"Filter by Name\"\n      />\n      <select\n        data-testid=\"column-filter\"\n        onChange={ handleInputColumn }\n      >\n        { filterByNumericValues.length >= ONE\n          ? optionsColumn\n            .filter((option) => (option !== filterByNumericValues[0].column))\n            .map((option) => (\n              <option key={ option } value={ option }>{ option }</option>))\n          : optionsColumn.map((option) => (\n            <option key={ option } value={ option }>{ option }</option>))}\n      </select>\n      <select\n        data-testid=\"comparison-filter\"\n        onChange={ handleInputComparison }\n      >\n        <option value=\"maior que\">maior que</option>\n        <option value=\"menor que\">menor que</option>\n        <option value=\"igual a\">igual a</option>\n      </select>\n      <input\n        type=\"number\"\n        placeholder=\"value\"\n        data-testid=\"value-filter\"\n        onChange={ handleInputValue }\n      />\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={ filterDataButton }\n      >\n        Filter\n      </button>\n      <select>\n        {optionsDropdownToSort.map((option) => (\n          <option key={ option } value={ option }>{option}</option>\n        ))}\n      </select>\n      <label htmlFor=\"ASC\">\n        ASC\n        <input\n          type=\"radio\"\n          data-testid=\"column-sort-input-asc\"\n          id=\"ASC\"\n          value=\"ASC\"\n          // onClick={ () => sortBy('ASC') }\n        />\n      </label>\n      <label htmlFor=\"DESC\">\n        DESC\n        <input\n          type=\"radio\"\n          data-testid=\"column-sort-input-desc\"\n          id=\"DESC\"\n          value=\"DESC\"\n          // onClick={ () => sortBy('DESC') }\n        />\n      </label>\n      <button\n        data-testid=\"column-sort-button\"\n        type=\"button\"\n        // onClick={ () => sortPlanets() }\n      >\n        Order\n      </button>\n      { filterByNumericValues.length >= ONE\n        ? filterByNumericValues.map((filter, index) => (\n          <div data-testid=\"filter\" key={ index }>\n            <p>\n              {`Filter ${index + 1}:\n              ${filter.column} ${filter.comparison} ${filter.value}` }\n            </p>\n            <button\n              type=\"button\"\n              value={ filter.column }\n              onClick={ deleteFilter }\n            >\n              X\n            </button>\n          </div>\n        )) : <div>Sem filtros</div>}\n    </div>\n  );\n}\n\nexport default PlanetsFilters;\n"]},"metadata":{},"sourceType":"module"}