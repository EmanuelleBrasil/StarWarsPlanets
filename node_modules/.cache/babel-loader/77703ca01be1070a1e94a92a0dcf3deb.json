{"ast":null,"code":"var _jsxFileName = \"/home/emanuelle/Trybe/frontend/projects/sd-07-project-starwars-datatable-hooks/src/components/PlanetsFilters.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport StarWarsContext from '../context/StarWarsContext';\n\nfunction PlanetsFilters() {\n  const {\n    handleFilterByName,\n    handleInputColumn,\n    handleInputComparison,\n    handleInputValue,\n    filterDataButton,\n    deleteFilter,\n    filters: {\n      filterByNumericValues\n    }\n  } = useContext(StarWarsContext);\n  const options = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n  const [optionsFiltered, setOptionsColumn] = useState(options);\n  useEffect(() => {\n    if (filterByNumericValues.length >= 1) {\n      setOptionsColumn(optionsFiltered.filter(option => option !== filterByNumericValues.forEach((f, index) => option !== f[index].column)));\n    }\n  }, [filterByNumericValues]);\n  const ONE = 1;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    \"data-testid\": \"name-filter\",\n    onChange: handleFilterByName,\n    placeholder: \"Filter by Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"column-filter\",\n    onChange: handleInputColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, filterByNumericValues.length >= optionsFiltered.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, option))), /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"comparison-filter\",\n    onChange: handleInputComparison,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"maior que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"maior que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"menor que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"menor que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"igual a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"igual a\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"value\",\n    \"data-testid\": \"value-filter\",\n    onChange: handleInputValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"button-filter\",\n    onClick: filterDataButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Filter\"), filterByNumericValues.length >= ONE ? filterByNumericValues.map((filter, index) => /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"filter\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, `Filter ${index + 1}:\n              ${filter.column} ${filter.comparison} ${filter.value}`), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    value: filter.column,\n    onClick: deleteFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"X\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 14\n    }\n  }, \"Sem filtros\"));\n}\n\nexport default PlanetsFilters;","map":{"version":3,"sources":["/home/emanuelle/Trybe/frontend/projects/sd-07-project-starwars-datatable-hooks/src/components/PlanetsFilters.js"],"names":["React","useContext","useEffect","useState","StarWarsContext","PlanetsFilters","handleFilterByName","handleInputColumn","handleInputComparison","handleInputValue","filterDataButton","deleteFilter","filters","filterByNumericValues","options","optionsFiltered","setOptionsColumn","length","filter","option","forEach","f","index","column","ONE","map","comparison","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport StarWarsContext from '../context/StarWarsContext';\n\nfunction PlanetsFilters() {\n  const {\n    handleFilterByName,\n    handleInputColumn,\n    handleInputComparison,\n    handleInputValue,\n    filterDataButton,\n    deleteFilter,\n    filters: { filterByNumericValues },\n  } = useContext(StarWarsContext);\n\n  const options = [\n    'population',\n    'orbital_period',\n    'diameter',\n    'rotation_period',\n    'surface_water',\n  ];\n\n  const [optionsFiltered, setOptionsColumn] = useState(options);\n\n  useEffect(() => {\n    if (filterByNumericValues.length >= 1) {\n      setOptionsColumn(optionsFiltered\n        .filter((option) => option !== filterByNumericValues\n          .forEach((f, index) => option !== f[index].column)));\n    }\n  }, [filterByNumericValues]);\n\n  const ONE = 1;\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        data-testid=\"name-filter\"\n        onChange={ handleFilterByName }\n        placeholder=\"Filter by Name\"\n      />\n      <select\n        data-testid=\"column-filter\"\n        onChange={ handleInputColumn }\n      >\n        { filterByNumericValues.length >=\n          optionsFiltered.map((option) => (\n          <option key={ option } value={ option }>{ option }</option>)) }\n      </select>\n      <select\n        data-testid=\"comparison-filter\"\n        onChange={ handleInputComparison }\n      >\n        <option value=\"maior que\">maior que</option>\n        <option value=\"menor que\">menor que</option>\n        <option value=\"igual a\">igual a</option>\n      </select>\n      <input\n        type=\"number\"\n        placeholder=\"value\"\n        data-testid=\"value-filter\"\n        onChange={ handleInputValue }\n      />\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={ filterDataButton }\n      >\n        Filter\n      </button>\n      { filterByNumericValues.length >= ONE\n        ? filterByNumericValues.map((filter, index) => (\n          <div data-testid=\"filter\" key={ index }>\n            <p>\n              {`Filter ${index + 1}:\n              ${filter.column} ${filter.comparison} ${filter.value}` }\n            </p>\n            <button\n              type=\"button\"\n              value={ filter.column }\n              onClick={ deleteFilter }\n            >\n              X\n            </button>\n          </div>\n        )) : <div>Sem filtros</div>}\n    </div>\n  );\n}\n\nexport default PlanetsFilters;\n"]},"metadata":{},"sourceType":"module"}