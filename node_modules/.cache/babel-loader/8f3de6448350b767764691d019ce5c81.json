{"ast":null,"code":"var _jsxFileName = \"/home/emanuelle/Trybe/frontend/sd-07-project-starwars-datatable-hooks/src/context/StarWarsProvider.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport StarWarsContext from './StarWarsContext';\nimport { getPlanets } from '../services/starwarsAPI';\n\nconst StarWarsProvider = ({\n  children\n}) => {\n  const [data, setDataPlanets] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterColumn, setColumn] = useState('');\n  const [filterComparison, setComparison] = useState('');\n  const [filterValue, setValue] = useState('');\n  const [filteredData, setFilteredData] = useState(data);\n  useEffect(() => {\n    async function fetchPlanets() {\n      const {\n        results\n      } = await getPlanets();\n      const dataPlanets = results;\n      setDataPlanets(dataPlanets);\n      setFilteredData(dataPlanets);\n    }\n\n    fetchPlanets();\n    console.log(filteredData);\n  });\n\n  const handleFilterByName = input => {\n    const {\n      value\n    } = input.target;\n    setFilterName(value);\n    const dataFilteredByName = data.filter(planet => planet.name.includes(value));\n    setFilteredData(dataFilteredByName);\n  };\n\n  const handleInputColumn = input => {\n    const {\n      value\n    } = input.target;\n    setColumn(value);\n  };\n\n  const handleInputComparison = input => {\n    const {\n      value\n    } = input.target;\n    setComparison(value);\n  };\n\n  const handleInputValue = input => {\n    const {\n      value\n    } = input.target;\n    setValue(value);\n  };\n\n  const context = {\n    data,\n    // resultado da api\n    filteredData,\n    filters: {\n      filterByName: {\n        name: filterName\n      },\n      filterByNumericValues: [{\n        column: filterColumn,\n        comparison: filterComparison,\n        value: filterValue\n      }]\n    },\n    handleFilterByName,\n    handleInputColumn,\n    handleInputComparison,\n    handleInputValue,\n    setFilteredData\n  };\n  return /*#__PURE__*/React.createElement(StarWarsContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default StarWarsProvider;\nStarWarsProvider.propTypes = {\n  children: PropTypes.element.isRequired\n};","map":{"version":3,"sources":["/home/emanuelle/Trybe/frontend/sd-07-project-starwars-datatable-hooks/src/context/StarWarsProvider.js"],"names":["React","useEffect","useState","PropTypes","StarWarsContext","getPlanets","StarWarsProvider","children","data","setDataPlanets","filterName","setFilterName","filterColumn","setColumn","filterComparison","setComparison","filterValue","setValue","filteredData","setFilteredData","fetchPlanets","results","dataPlanets","console","log","handleFilterByName","input","value","target","dataFilteredByName","filter","planet","name","includes","handleInputColumn","handleInputComparison","handleInputValue","context","filters","filterByName","filterByNumericValues","column","comparison","propTypes","element","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport StarWarsContext from './StarWarsContext';\nimport { getPlanets } from '../services/starwarsAPI';\n\nconst StarWarsProvider = ({ children }) => {\n  const [data, setDataPlanets] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterColumn, setColumn] = useState('');\n  const [filterComparison, setComparison] = useState('');\n  const [filterValue, setValue] = useState('');\n  const [filteredData, setFilteredData] = useState(data);\n\n  useEffect(() => {\n    async function fetchPlanets() {\n      const { results } = await getPlanets();\n      const dataPlanets = results;\n      setDataPlanets(dataPlanets);\n      setFilteredData(dataPlanets);\n    }\n    fetchPlanets();\n    console.log(filteredData);\n  });\n\n  const handleFilterByName = (input) => {\n    const { value } = input.target;\n    setFilterName(value);\n    const dataFilteredByName = data.filter((planet) => planet.name.includes(value));\n    setFilteredData(dataFilteredByName);\n  };\n\n  const handleInputColumn = (input) => {\n    const { value } = input.target;\n    setColumn(value);\n  };\n\n  const handleInputComparison = (input) => {\n    const { value } = input.target;\n    setComparison(value);\n  };\n\n  const handleInputValue = (input) => {\n    const { value } = input.target;\n    setValue(value);\n  };\n\n  const context = {\n    data, // resultado da api\n    filteredData,\n    filters: {\n      filterByName: {\n        name: filterName,\n      },\n      filterByNumericValues: [\n        {\n          column: filterColumn,\n          comparison: filterComparison,\n          value: filterValue,\n        },\n      ],\n    },\n    handleFilterByName,\n    handleInputColumn,\n    handleInputComparison,\n    handleInputValue,\n    setFilteredData,\n  };\n\n  return (\n    <StarWarsContext.Provider value={ context }>\n      {children}\n    </StarWarsContext.Provider>\n  );\n};\n\nexport default StarWarsProvider;\n\nStarWarsProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}